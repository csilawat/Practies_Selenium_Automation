plugins {
    id 'java'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'org.testng', name: 'testng', version: '7.0.0'
    testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
    annotationProcessor 'org.projectlombok:lombok:1.18.8'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.8'
    compileOnly 'org.projectlombok:lombok:1.18.8'
    compile group: 'org.json', name: 'json', version: '20190722'
    testCompile group: 'io.rest-assured', name: 'rest-assured', version: '4.0.0'
    compile group: 'com.github.javafaker', name: 'javafaker', version: '1.0.1'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.9.3'
    compile group: 'com.github.javafaker', name: 'javafaker', version: '0.15'
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.12.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.12.1'
    annotationProcessor 'org.projectlombok:lombok:1.18.8'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.8'

    // https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml
    implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '5.1.0'


    // dependency For web UI Automation

//    implementation 'org.projectlombok:lombok:1.18.18'
    implementation 'org.testng:testng:7.1.0'

    testImplementation group: 'org.testng', name: 'testng', version: '6.8.0'
    testRuntimeOnly group: 'org.testng', name: 'testng', version: '6.8.0'


// https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java
    implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '4.0.0-beta-4'

//    testImplementation 'org.hamcrest:hamcrest-all:1.3'

//    annotationProcessor 'org.projectlombok:lombok:1.18.8'
//    testAnnotationProcessor 'org.projectlombok:lombok:1.18.8'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-io
    implementation group: 'org.apache.commons', name: 'commons-io', version: '1.3.2'

    // https://mvnrepository.com/artifact/log4j/apache-log4j-extras
    implementation group: 'log4j', name: 'apache-log4j-extras', version: '1.2.17'


    // https://mvnrepository.com/artifact/org.apache.pdfbox/pdfbox
    implementation group: 'org.apache.pdfbox', name: 'pdfbox', version: '2.0.24'

// https://mvnrepository.com/artifact/com.relevantcodes/extentreports
    implementation group: 'com.relevantcodes', name: 'extentreports', version: '2.41.2'


    implementation 'log4j:log4j:1.2.17'

}

test {
   useTestNG()

           {
             //  systemProperty "baseUrl", findProperty("baseUrl")
              // suites 'src/test/resources/testng-suite-parallel.xml'
               useDefaultListeners = true
               testLogging {
                   events "passed", "skipped", "failed", "standardOut", "standardError"
                   exceptionFormat = 'full'
//                    showExceptions true
//                    showCauses true
                   showStackTraces true
               }
               afterSuite { desc, result ->
                   if (!desc.parent) {
                       def output = "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} passed, ${result.failedTestCount} failed, ${result.skippedTestCount} skipped)"
                       def startItem = '|  ', endItem = '  |'
                       def repeatLength = startItem.length() + output.length() + endItem.length()
                       println('\n' + ('-' * repeatLength) + '\n' + startItem + output + endItem + '\n' + ('-' * repeatLength))
                   }
               }
               // add a collection to track failedTests
               ext.failedTests = []

               // add a testlistener to all tasks of type Test
//                tasks.withType(Test) {
//                    afterTest { TestDescriptor descriptor, TestResult result ->
//                        if(result.resultType == org.gradle.api.tasks.testing.TestResult.ResultType.FAILURE){
//                            failedTests << ["${descriptor.className}::${descriptor.name}"]
//                        }
//                    }
//                }

               // print out tracked failed tests when the build has finished
//                gradle.buildFinished {
//                    if(!failedTests.empty){
//                        println "Failed tests for ${project.name}:"
//                        failedTests.each { failedTest ->
//                            println failedTest
//                        }
//                        println ""
//                    }
//                }
           }
    maxHeapSize  = '1G'
}

test {
    useTestNG()
}